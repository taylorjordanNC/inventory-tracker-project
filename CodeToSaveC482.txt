PORTIONS OF CODE TO SAVE

ADD PART CONTROLLER

        } else if(Integer.parseInt(invTF.getText().trim()) < Integer.parseInt(minTF.getText().trim())){
            Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
            alert.setTitle("Warning");
            alert.setHeaderText("Invalid Input");
            alert.setContentText("Inventory cannot be less than the minimum. Are you sure you want to proceed?");
            ModifyPartController.fieldError(invTF);
            ModifyPartController.fieldError(minTF);
            Optional<ButtonType> result = alert.showAndWait();
            if(result.isPresent() && (result.get() == ButtonType.CANCEL)){
                alert.close();
            } else if(result.isPresent() && (result.get() == ButtonType.OK)){
                savePart();
            }

        } else if(Integer.parseInt(invTF.getText().trim()) > Integer.parseInt(maxTF.getText().trim())){
            Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
            alert.setTitle("Warning");
            alert.setHeaderText("Invalid Input");
            alert.setContentText("Inventory cannot exceed maximum. Are you sure you want to proceed?");
            ModifyPartController.fieldError(invTF);
            ModifyPartController.fieldError(maxTF);
            Optional<ButtonType> result = alert.showAndWait();
            if(result.isPresent() && (result.get() == ButtonType.CANCEL)){
                alert.close();
            } else if(result.isPresent() && (result.get() == ButtonType.OK)){
                savePart();
            }

MODIFY PART CONTROLLER

        } else if(Integer.parseInt(invTextField.getText().trim()) < Integer.parseInt(minTextField.getText().trim())){
            Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
            alert.setTitle("Warning");
            alert.setHeaderText("Invalid Input");
            alert.setContentText("Inventory cannot be less than the minimum. Are you sure you want to proceed?");
            ModifyPartController.fieldError(invTextField);
            ModifyPartController.fieldError(minTextField);
            Optional<ButtonType> result = alert.showAndWait();
            if(result.isPresent() && (result.get() == ButtonType.CANCEL)){
                alert.close();
            } else if(result.isPresent() && (result.get() == ButtonType.OK)){
                alert.setTitle("Please Confirm");
                alert.setHeaderText("Product will be modified.");
                alert.setContentText("Are you sure you want to save these changes?");
                result = alert.showAndWait();

                if(result.isPresent() && (result.get() == ButtonType.CANCEL)){
                    alert.close();
                } else if(result.isPresent() && (result.get() == ButtonType.OK)){
                    savePart();
                }
            }


        } else if(Integer.parseInt(invTextField.getText().trim()) > Integer.parseInt(maxTextField.getText().trim())){
            Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
            alert.setTitle("Warning");
            alert.setHeaderText("Invalid Input");
            alert.setContentText("Inventory cannot exceed maximum. Are you sure you want to proceed?");
            ModifyPartController.fieldError(invTextField);
            ModifyPartController.fieldError(maxTextField);
            Optional<ButtonType> result = alert.showAndWait();
            if(result.isPresent() && (result.get() == ButtonType.CANCEL)){
                alert.close();
            } else if(result.isPresent() && (result.get() == ButtonType.OK)){
                alert.setTitle("Please Confirm");
                alert.setHeaderText("Product will be modified.");
                alert.setContentText("Are you sure you want to save these changes?");
                result = alert.showAndWait();

                if(result.isPresent() && (result.get() == ButtonType.CANCEL)){
                    alert.close();
                } else if(result.isPresent() && (result.get() == ButtonType.OK)){
                    savePart();
                }
            }

ADD PRODUCT CONTROLLER
else if(associatedParts.isEmpty()){
            Alert alert = new Alert(Alert.AlertType.ERROR);
            alert.setTitle("Error");
            alert.setHeaderText("Invalid Input");
            alert.setContentText("Product must contain at least one part.");
            alert.showAndWait();
            } 

MOD PRODUCT

else if(associatedParts.isEmpty()){
            Alert alert = new Alert(Alert.AlertType.ERROR);
            alert.setTitle("Error");
            alert.setHeaderText("Invalid Input");
            alert.setContentText("Product must contain at least one part.");
            alert.showAndWait();
        } 


HANDLE SAVE METHODS

if(nameTF.getText().trim().isEmpty()) {
            Alert alert = new Alert(Alert.AlertType.ERROR);
            alert.setTitle("Error");
            alert.setHeaderText("Invalid Input");
            alert.setContentText("No part name provided.");
            alert.showAndWait();
        } else if(invTF.getText().trim().isEmpty()) {
            Alert alert = new Alert(Alert.AlertType.ERROR);
            alert.setTitle("Error");
            alert.setContentText("Invalid inventory amount.");
            alert.showAndWait();
        } else if(minTF.getText().trim().isEmpty()) {
            Alert alert = new Alert(Alert.AlertType.ERROR);
            alert.setTitle("Error");
            alert.setContentText("Invalid minimum stock amount");
            alert.showAndWait();
        } else if(maxTF.getText().trim().isEmpty()) {
            Alert alert = new Alert(Alert.AlertType.ERROR);
            alert.setTitle("Error");
            alert.setHeaderText("Invalid Input");
            alert.setContentText("No maximum stock amount provided.");
            alert.showAndWait();
        } else if(priceTF.getText().trim().isEmpty()) {
            Alert alert = new Alert(Alert.AlertType.ERROR);
            alert.setTitle("Error");
            alert.setHeaderText("Invalid Input");
            alert.setContentText("No price provided.");
            alert.showAndWait();
        } else if(toggleTF.getText().trim().isEmpty() && outSourced.isSelected()){
            Alert alert = new Alert(Alert.AlertType.ERROR);
            alert.setTitle("Error");
            alert.setHeaderText("Invalid Input");
            alert.setContentText("No company name provided.");
            alert.showAndWait();
        } else if(toggleTF.getText().trim().isEmpty() && inHouse.isSelected()){
            Alert alert = new Alert(Alert.AlertType.ERROR);
            alert.setTitle("Error");
            alert.setHeaderText("Invalid Input");
            alert.setContentText("No machine ID provided.");
            alert.showAndWait();
        } else 

REMOVING ASSOCIATED PART ALERT

else{
            Alert alert = new Alert(Alert.AlertType.ERROR);
            alert.setTitle("Error");
            alert.setHeaderText("No Item Selected");
            alert.setContentText("Please select a part to remove.");
            alert.showAndWait();
        }

ADDING PART IF NO SELECTION

else {
            Alert alert = new Alert(Alert.AlertType.ERROR);
            alert.setTitle("Error");
            alert.setHeaderText("No Item Selected");
            alert.setContentText("Please select a part to add.");
            alert.showAndWait();
        }

NO PRODUCT SELECTED TO MODIFY

else {
            Alert alert = new Alert(Alert.AlertType.ERROR);
            alert.setTitle("Error");
            alert.setHeaderText("No Item Selected");
            alert.setContentText("Please select a product to modify.");
            alert.showAndWait();
        }

